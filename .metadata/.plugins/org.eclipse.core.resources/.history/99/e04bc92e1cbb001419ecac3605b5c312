import static org.junit.Assert.assertEquals;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

import mx.itesm.a01139626.p2.src.FileInfo;
import mx.itesm.a01139626.p2.src.FileLineSorter;

import org.junit.Test;


public class FileLineSorterTest {
	FileLineSorter filSorter;
	
	public String readContentFromFile(String sFName) {
		try {
			BufferedReader bufFileReader = new BufferedReader(new FileReader(new File(
					sFName)));
			try {
				int iChar;
				String sContent = ""; 
				// read the whole file
				while ((iChar = bufFileReader.read()) != -1) {
					sContent += (char)iChar; 
				}
			} catch (IOException e) {
				System.out.println(e);
			}
		} catch (FileNotFoundException e) {
			// Print appropriate message constant.
			System.out.println(e);
		}

	}
	
	@Test
	public void testWhiteLineCounter(){
		System.out.println("\nWHITELINES");		
		filSorter = new FileLineSorter();
		filSorter.addFileName("Prueba5LineasBlanco.txt");
		filSorter.parseFiles();
		filSorter.sortFiles();
		filSorter.printFiles();
		System.out.println(filSorter);
		
		assertEquals(5, filSorter.getFilArrFilesWithStats().get(0).getiWhiteLines());
		assertEquals(5, filSorter.getFilArrFilesWithStats().get(0).getiTotalLines());
		
	}
	@Test
	public void testInfoLineCounter(){
		System.out.println("\nINFOLINES");
		filSorter = new FileLineSorter();
		filSorter.addFileName("Prueba5LineasInformacion.txt");
		filSorter.parseFiles();
		filSorter.sortFiles();
		filSorter.printFiles();
		System.out.println(filSorter);
		
		assertEquals(5, filSorter.getFilArrFilesWithStats().get(0).getiInfoLines());
		
	}
	@Test
	public void testSortingEquivalentFiles(){
		System.out.println("\nSORTING");
		filSorter = new FileLineSorter();
		filSorter.addFileName("PruebaArchivoIgual1.txt");
		filSorter.addFileName("PruebaArchivoIgual2.txt");
		filSorter.parseFiles();
		filSorter.sortFiles();
		filSorter.printFiles();
		System.out.println(filSorter);
		
		
		FileInfo filF1 = filSorter.getFilArrFilesWithStats().get(0);
		FileInfo filF2 = filSorter.getFilArrFilesWithStats().get(1);
		
		// Correct order
		assertEquals("PruebaArchivoIgual1.txt", filF1.getsFileName());
		
		// Same stats from files.
		assertEquals(filF1.getiWhiteLines(), filF2.getiWhiteLines());
		assertEquals(filF1.getiInfoLines(), filF2.getiInfoLines());
		
		// Total lines working properly
		assertEquals(10, filSorter.getiTotalWhiteLines());
		assertEquals(10, filSorter.getiTotalInfoLines());
		
	}

}

