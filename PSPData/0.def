<?xml version='1.0' encoding='UTF-8' ?>
<defectLog>
  <defect num="1" type="Interface" inj="Design" rem="Code" ft="1.9" fd="" desc="Mi diseño tiene un método menos, porque me faltó poner tipo de dato de retorno al método toString como string. " date="@1423259177606" />
  <defect num="2" type="Function" inj="Design" rem="Code" ft="11.1" fd="" desc="Me falta funcionalidad que me gustaría tener, porque no pensé en los mensajes de error en el diseño. Agregué una interfaz que contiene los mensajes de error que voy a usar en mi programa. " date="@1423260324589" />
  <defect num="3" type="Documentation" inj="Design" rem="Code" ft="7.3" fd="" desc="Declaré un patrón por si las dudas en la clase Parser porque así lo tenía en mi diseño y esto me dejaba una variable sin usar. " date="@1423621236174" />
  <defect num="4" type="Function" inj="Design" rem="Code" ft="6.3" fd="" desc="Necesitaba otro patrón para verificar el nombre de un archivo porque no lo puse en el diseño. " date="@1423621702017" />
  <defect num="5" type="Function" inj="Code" rem="Test" ft="4.3" fd="" desc="Había un loop infinito cuando pedía archivos porque estaba haciendo el ciclo mientras fueran válidos en lugar de mientras fueran inválidos. " date="@1423626119228" />
  <defect num="6" type="Checking" inj="Design" rem="Test" ft="1.0" fd="" desc="Imprimía un mensaje de error antes de tener un error. Agregué un if que checaba si el usuario no había introducido nada, en ese caso no imprimía nada (es decir, la primera vuelta)." date="@1423626421606" />
  <defect num="7" type="Checking" inj="Design" rem="Test" ft="5.8" fd="" desc='No estaba actualizando el booleano que describe la existencia y por ende validez del archivo. Entonces, aunque encontrara los archivos, y los parseara, no los imprimía porque "no eran válidos".' date="@1423626550841" />
  <defect num="8" type="Function" inj="Code" rem="Test" ft="1.5" fd="" desc="No había impreso los totales porque se me olvidó agregarlo en el código. No verifiqué los requerimientos antes de compilar. " date="@1423628019333" />
  <defect num="9" type="Documentation" inj="Design" rem="Test" ft="12.5" fd="" desc="Me faltó diseñar casos de prueba anormales para el contenido de los archivos de texto y entonces los tuve que agregar y crear en la fase de testing. " count="3" date="@1423683186929" />
  <defect num="10" type="Function" inj="Code" rem="Test" ft="1.3" fd="" desc="No encapsulé el ordenamiento de los objetos y esto causaba una redundancia en el código y le quitaba legibilidad. Me dí cuenta cuando estaba tratando ordenar mis Stats de Archivos en la clase de JUnit." date="@1423685140566" />
  <defect num="11" type="Function" inj="Code" rem="Test" ft="177.5" fd="" desc="Lectura de un espacio en blanco de menos, poque la función readLine() desaparece el último salto de línea. Según el caso de prueba del profesor, si hay un salto de línea al final del documento, esto tiene que contar como otra línea en blanco aunque no haya nada después.  " date="@1423695607896" />
  <defect num="12" type="Function" inj="Test" rem="Test" ft="0.9" fd="11" desc="No funcionaba la lectura de líneas de información. No sé por qué, pero simplemente utilicé la estructura de la expresión regular para las líneas en blanco y remplacé los caracteres en blanco por la siguiente cadena: .*\S.*  //Esto significa: al menos un caracter que no sea espacio. " date="@1423709575078" />
</defectLog>